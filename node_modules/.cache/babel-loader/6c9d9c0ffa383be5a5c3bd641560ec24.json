{"ast":null,"code":"var _jsxFileName = \"/Users/josua/Documents/JavaScipt/papa-website/papa-website/src/components/menubar/NavigationBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonBar from './ButtonBar';\nimport { ClickAwayListener, Button, Drawer, Typography, Fade } from '@material-ui/core';\n\nconst styles = theme => ({\n  menuBar: {\n    position: \"static\",\n    paddingBottom: theme.spacing(1),\n    paddingTop: theme.spacing(1)\n  },\n  buttonToolbar: {\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5)\n  },\n  container: {\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\nclass NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDrawer = open => event => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      this.setState({\n        drawerOpen: open\n      });\n    };\n\n    this.state = {\n      fixed: false,\n      drawerOpen: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', () => this.update());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll');\n  }\n\n  update() {\n    if (window.scrollY > window.innerHeight) {\n      this.setState({\n        fixed: true\n      });\n    } else {\n      if (this.state.fixed === true) {\n        this.setState({\n          fixed: false\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.mobile) {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", Object.assign({}, this.props, {\n        style: {\n          flexGrow: 1,\n          position: this.state.fixed ? \"fixed\" : \"relative\",\n          top: 0,\n          zIndex: 2,\n          width: \"100%\",\n          backgroundColor: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(ClickAwayListener, {\n        onClickAway: this.toggleDrawer(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        \"aria-controls\": \"mobile-view-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: this.toggleDrawer(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Menu\"))), React.createElement(Drawer, {\n        id: \"mobile-view-menu\",\n        anchor: \"left\",\n        open: this.state.drawerOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Fade, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ButtonBar, {\n        flexDirection: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })))), this.state.fixed && React.createElement(\"div\", {\n        style: {\n          height: \"36px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", Object.assign({}, this.props, {\n        style: {\n          flexGrow: 1,\n          position: this.state.fixed ? \"fixed\" : \"relative\",\n          top: 0,\n          zIndex: 2,\n          width: \"100%\",\n          backgroundColor: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(ButtonBar, {\n        flexDirection: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), this.state.fixed && React.createElement(\"div\", {\n        style: {\n          height: \"36px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nNavigationBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NavigationBar);\n/* <AppBar className={classes.menuBar} color={\"primary\"}>\n                        <Toolbar>\n                            <img\n                                className={classes.menuButton}\n                                src={Logo}\n                                alt=\"pianoservice-logo\"\n                                width=\"350px\" height=\"auto\"\n                            />\n                            <Typography variant=\"h6\" className={classes.title}>\n                            </Typography>\n\n                            <img\n                                src={Spruch}\n                                alt=\"spruch\"\n                                width=\"250px\" height=\"auto\"\n                            />\n                        </Toolbar>\n                    </AppBar>*/","map":{"version":3,"sources":["/Users/josua/Documents/JavaScipt/papa-website/papa-website/src/components/menubar/NavigationBar.jsx"],"names":["React","PropTypes","withStyles","ButtonBar","ClickAwayListener","Button","Drawer","Typography","Fade","styles","theme","menuBar","position","paddingBottom","spacing","paddingTop","buttonToolbar","alignItems","container","direction","justify","menuButton","marginRight","title","flexGrow","NavigationBar","Component","constructor","props","toggleDrawer","open","event","type","key","setState","drawerOpen","state","fixed","componentDidMount","window","addEventListener","update","componentWillUnmount","removeEventListener","scrollY","innerHeight","render","mobile","top","zIndex","width","backgroundColor","height","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonBar from './ButtonBar';\nimport { ClickAwayListener, Button, Drawer, Typography, Fade } from '@material-ui/core';\n\nconst styles = theme => ({\n    menuBar: {\n        position: \"static\",\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n    },\n    buttonToolbar: {\n        alignItems: 'flex-start',\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n    },\n\n    container: {\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fixed: false,\n            drawerOpen: false,\n        }\n    }\n    componentDidMount() {\n        window.addEventListener('scroll', () => this.update())\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll');\n    }\n\n    update() {\n        if (window.scrollY > window.innerHeight) {\n            this.setState({ fixed: true })\n        } else {\n            if (this.state.fixed === true) {\n\n                this.setState({ fixed: false })\n            }\n        }\n    }\n    toggleDrawer = (open) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({ drawerOpen: open });\n    }\n\n    render() {\n        if (this.props.mobile) {\n            return (\n                <>\n                    <div {...this.props} style={{\n                        flexGrow: 1,\n                        position: this.state.fixed ? \"fixed\" : \"relative\",\n                        top: 0,\n                        zIndex: 2,\n                        width: \"100%\",\n                        backgroundColor: \"#ffffff\"\n                    }}>\n                        <ClickAwayListener onClickAway={this.toggleDrawer(false)}>\n                            <Button aria-controls=\"mobile-view-menu\" aria-haspopup=\"true\" onClick={this.toggleDrawer(true)}>\n                                <Typography variant=\"button\"> Menu</Typography>\n                            </Button>\n                        </ClickAwayListener>\n                        <Drawer id=\"mobile-view-menu\" anchor=\"left\" open={this.state.drawerOpen} >\n                            <Fade>\n                                <ButtonBar flexDirection=\"column\"/>\n                            </Fade>\n                        </Drawer>\n\n\n                    </div>\n                    {this.state.fixed && <div style={{ height: \"36px\" }} />}\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div {...this.props} style={{\n                        flexGrow: 1,\n                        position: this.state.fixed ? \"fixed\" : \"relative\",\n                        top: 0,\n                        zIndex: 2,\n                        width: \"100%\",\n                        backgroundColor: \"#ffffff\"\n                    }}>\n                        <ButtonBar flexDirection=\"row\"/>\n\n                    </div>\n                    {this.state.fixed && <div style={{ height: \"36px\" }} />}\n                </>\n            )\n        }\n    }\n\n}\n\nNavigationBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavigationBar);\n\n\n/* <AppBar className={classes.menuBar} color={\"primary\"}>\n                        <Toolbar>\n                            <img\n                                className={classes.menuButton}\n                                src={Logo}\n                                alt=\"pianoservice-logo\"\n                                width=\"350px\" height=\"auto\"\n                            />\n                            <Typography variant=\"h6\" className={classes.title}>\n                            </Typography>\n\n                            <img\n                                src={Spruch}\n                                alt=\"spruch\"\n                                width=\"250px\" height=\"auto\"\n                            />\n                        </Toolbar>\n                    </AppBar>*/"]},"metadata":{},"sourceType":"module"}